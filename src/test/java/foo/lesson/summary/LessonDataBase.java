package foo.lesson.summary;

/**
 * <b>数据库相关</b><p>
 * 
 * 1.主流数据库有哪些?<br>
 * 2.你所了解的数据库优化措施?<br>
 * 3.Sql语句注意点?<br>
 * 4.什么是JDBC操作?写出一个简单的JDBC连接数据库的小程序?<br>
 * 5.数据库连接池?<br>
 * 6.数据库缓存?<br>
 * 7.简单谈谈你对事务的理解?<br>
 * 8.批处理Batch,函数过程Process?<br>
 * 9.什么是ORM框架，为什么要有ORM框架?谈谈主流的ORM框架?<br>
 * 
 * 
 * <b>Hibernate相关</b><p>
 * 
 * 
 * @author wyy
 * 2016年11月23日
 *
 */
public class LessonDataBase {
	//主流数据库有哪些?<br>
	//关系型数据库 RDBS
	//优点：保证数据的安全性和一致性   （ACID原则）
	       //可以实现复杂的搜索
	//缺点：行列表 ，他的文件结构Scheme比较复杂
	//1.*Mysql(开源)        适合企业：互联网和初创公司
	//优点：开源(免费，社区活跃[出现问题，在网上搜索解决问题的概率更高])，开源软件可以做深度定制
	//缺点：1.不够稳定，效率跟你使用者的能力是挂钩的 2.一般性能比不上商业服务器
	//2.*SqlServer(微软)    适合企业：微软全家桶
	//优点：跟微软自身那一整套服务整合，特别灵活方便 IIS（微软的web服务器） .net/c#
	//缺点：
	//3.*Oracle(商业服务器)  适合企业：国企
	//优点：各个方面都很强
	//缺点：太贵（按CPU数量来收license授权费）
	
	//非关系型数据库NOSQL
	//本质上就是带索引的文件-(做查询)
	//最大优点：文件结构比较简单
	//1.性能高
	//2.容易扩展
	//*Mongodb：主流的非关系型数据库，文档存储 更叫高效
	//*Redis:一般作为缓存数据库
	
	//怎么构建你的网站的数据库?
	//1.对一些重要的敏感的数据(用户信息  用户账户信息) 要选用 关系型数据库 RDBS（数据的安全性太过重要）
	//2.日记,电商的推荐系统(记录你的消费记录和网站浏览足迹) - 非关系型数据库NOSQL（对性能要求更高）
	
	//大数据简单历程：
	//B搜索A电商T社交
	//社交始于约炮 兴于炫耀 衰于广告 亡于微商
	//招募最好的学生（成长自己打击对手）
	
	//Google(谷爹)：hfsGoogle文件系统,BigTable大表格,
	//lucene：jAVA开源搜索引擎的作者看了Google的论文  2005
	//开发了Hadoop大数据库
	
	/**
	 * WEB服务器
	 */
	//*TOMCAT(开源WEB服务器)
	//优点：1.免费 2.社区活跃，出现问题如果在网上解决。 3.深度定制
	//*IIS(微软WEB服务器)
	//优点：
	//*WebLogic/WebShpehre(商业WEB服务器)
	//优点：1.重型 功能强大  
	//缺点：贵，重型
	/**
	 * HTTP服务器（只处理静态内容，效率比WEB服务器高很多）
	 */
	//*Nginx：
	//反向代理(正向代理-浏览器[前端]) ：代理的是你的服务端
	//反向代理就是为了实现负载均衡
	//*ApacheHTTP：
	
	//处理静态网页和静态内容
	//动静分离
	//所有请求都过HTTP服务器->  再把动态内容转发给WEB服务器
	
    //数据库优化
	//1.sql语句的优化  （两种批量insert的效率)，批处理和函数过程
	//2.数据库连接池
	//3.Ehcache
	//4.怎么更搞笑的使用事务
}
